!pip install feedparser

import requests
import json
from datetime import datetime
import feedparser
import openai

# API KEYS
NEWS_API_KEY = "d804a787bbd44118afd2d2f466c6ae4a"
OPENAI_API_KEY = "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"
openai.api_key = OPENAI_API_KEY

# STEP 1.0: FETCHING NEWS ARTICLES

def latest_news():
    # Variable holding your News API key and the hardcoded query
    url = f"https://newsapi.org/v2/everything?q=drone+UAV+DGCA&sortBy=publishedAt&apiKey={NEWS_API_KEY}"
    news = requests.get(url).json()

    # Display the full API response for debugging
    print("Full API Response:")
    display(news)

    articles = []
    if "articles" in news:
        for n in news["articles"][:4]:  # only latest 4 articles
            articles.append({
                "title": n["title"],
                "url": n["url"],
                "published": n["publishedAt"],
                "image": n["urlToImage"]
            })
    return articles

# Function calling and display the output
latest_articles = latest_news()
display(latest_articles)

# STEP 2: SUMMARIZATION

def summarize_article(article):
    text = f"Title: {article['title']}\nLink: {article['url']}"
    # Summarize this drone-related article in 2â€“3 paragraphs. Extract hashtags
    # and trending keywords at the end."

    response = openai.ChatCompletion.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": text}]
    )

    return response["choices"][0]["message"]["content"]
    final_article = summarize_article()
    display(final_article)

# STEP 3: FORMAT SOCIAL POST

def format_post(article, summary_text):
    post = f"""
   **Drone Industry Update!**

{summary_text}

   Read more: {article['url']}

#DroneNews #UAV #Technology #IndiaDrones
"""

    return post.strip()

# STEP 4: SAVE OUTPUT JSON

def save_post(post_text, article):
    output = {
        "generated_at": str(datetime.now()),
        "post_text": post_text,
        "image": article["image"],
        "title": article["title"],
        "article_link": article["url"]
    }

    with open("final_post.json", "w", encoding="utf-8") as f:
        json.dump(output, f, indent=4)

    print("final_post.json saved successfully")

# THE CLIMAX...

def final():
    print("Finding the latest drone news...")
    articles = latest_news()

    if len(articles) == 0:
        print("No news found.")
        return

    first_article = articles[0]
    print("Summarizing:", first_article["title"])

    summary = summarize_article(first_article)

    print("Formatting social media post...")
    post = format_post(first_article, summary)

    print("Saving final post file...")
    save_post(post, first_article)

    print("\n Automation completed! Check final_post.json")

    # RUN PROGRAM
if __name__ == "__main__":
    final()
